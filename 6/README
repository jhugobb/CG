# CG
Project for the Computer Graphics course @ RUG

Free Animation:
    -We animated our cat model by at each frame adding one degree to each of its coordinates. After adding the program calcules the modulus by 360 (i.e.: if we reach the 398 degrees of rotation for example, we do 398 % 360 = 38).
    -We implemented perspective controls (adws) to scroll the perspective in an espherical coordinate system, being the focus point the center of the sphere.  You can also zoom with '-' and '=', and pause the animation with 'space'.

Water Animation:
    -At the normal coloring part (002_normals.png), in the fragmentation shader we mapped the normal vector coordinates to rgb values with the function f(x) = 2*x + 1, so that it would provide the following example results f(-1) = 0, f(0) = 0.5, f(1) = 1, since we saw it as the most logic way to do it. Therefore, every vertex would always have 0.5 of green (because, as logically said in the document, dV should be 0 for now), it will also always have value 1 of blue because that's what we were asked to implement, and the red component will oscilate between 0 and 1, with value 0 when the derivative is maximum, with value 0.5 when the derivative is 0 and with value 1 when the derivative is minimum. The values would be symetric if we didn't negate the dU value in -> vec3 normal = normalize(vec3(-dU, -dV, 1.0)).
